{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAK3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbDN,SAASC,cAAc,yBAE/Ba,iBAAiB,SAerB,SAAqBC,GACnBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAYe,cAAeD,GAAK,EAAG,CACrD,MAAME,EAAepB,EAAWmB,cAAgBhB,EAAUgB,cAAgBD,EAE1Eb,EAAca,EAAGE,GACdC,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBe,EAAAxB,GAASyB,OAAOC,QACd,qBAAqBlB,EAAW,QAAQC,MACzC,IAEFkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBe,EAAAxB,GAASyB,OAAOG,QACd,oBAAoBpB,EAAW,QAAQC,MACxC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit\"]');\n\nbtn.addEventListener('click', handleClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleClick(event) {\n  event.preventDefault();\n  for (let i = 0; i < inputAmount.valueAsNumber; i += 1) {\n    const promiseDelay = inputDelay.valueAsNumber + inputStep.valueAsNumber * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","valueAsNumber","promiseDelay","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.91160a0f.js.map"}