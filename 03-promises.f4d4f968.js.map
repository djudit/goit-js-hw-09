{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAK3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAbKN,SAASC,cAAc,yBAE/Ba,iBAAiB,SAerB,SAAqBC,GACnBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAYe,cAAeD,GAAK,EAAG,CACrD,IAAME,EAAepB,EAAWmB,cAAgBhB,EAAUgB,cAAgBD,EAE1Eb,EAAca,EAAGE,GACdC,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBgB,EAAAzB,GAAS0B,OAAOC,QACd,qBAAwCC,OAAnBpB,EAAW,EAAE,QAAYoB,OAANnB,EAAM,M,IAGjDoB,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBgB,EAAAzB,GAAS0B,OAAOI,QACd,oBAAuCF,OAAnBpB,EAAW,EAAE,QAAYoB,OAANnB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=\"submit\"]');\n\nbtn.addEventListener('click', handleClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleClick(event) {\n  event.preventDefault();\n  for (let i = 0; i < inputAmount.valueAsNumber; i += 1) {\n    const promiseDelay = inputDelay.valueAsNumber + inputStep.valueAsNumber * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$inputDelay","document","querySelector","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","valueAsNumber","promiseDelay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f4d4f968.js.map"}